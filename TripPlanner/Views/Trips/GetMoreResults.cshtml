@using TripPlanner.Models
@model Places

<table class="table table-striped table-bordered dt-responsive nowrap" id="moreTable" width="100%" cellspacing="0">
    <thead>
        <tr>
            <th onclick="sortTable(0)" style="cursor:pointer">Name</th>
            <th onclick="sortTable(1)" style="cursor:pointer">Address</th>
            <th onclick="sortTable(2)" style="cursor:pointer">Rating</th>
        </tr>

    </thead>
    @foreach (var result in Model.results)
    {
        <tr>
            <td class="td1"><a href="/Trips/Details?id=@result.place_id">@result.name</a></td>
            <td class="td1">@result.vicinity</td>
            <td class="td1">@result.rating</td>

        </tr>
    }
</table>
<button onclick="location.href='/Trips/GetMoreResults?token=@Model.next_page_token'">Next Page</button>

<button onclick="goBack()">Go Back</button>

<script>
    function goBack() {
        window.history.back();
    }
</script>

<script>
    function sortTable(n) {
        var table, rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;
        table = document.getElementById("moreTable");
        switching = true;
        dir = "asc";
        while (switching) {
            switching = false;
            rows = table.rows;
            for (i = 1; i < (rows.length - 1); i++) {
                shouldSwitch = false;
                x = rows[i].getElementsByTagName("TD")[n];
                y = rows[i + 1].getElementsByTagName("TD")[n];
                let xData = x.innerText;
                let yData = y.innerText;
                const isNumeric =
                    xData.indexOf("-") === -1 &&
                    yData.indexOf("-") === -1 &&
                    !isNaN(parseFloat(xData)) &&
                    !isNaN(parseFloat(yData));
                if (dir == "asc") {
                    if ((isNumeric && parseFloat(xData) > parseFloat(yData)) ||
                        (!isNumeric && xData.toLowerCase() > yData.toLowerCase())) {
                        shouldSwitch = true;
                        break;
                    }
                } else if (dir == "desc") {
                    if ((isNumeric && parseFloat(xData) < parseFloat(yData)) ||
                        (!isNumeric && xData.toLowerCase() < yData.toLowerCase())) {
                        shouldSwitch = true;
                        break;
                    }
                }
            }
            if (shouldSwitch) {
                rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
                switching = true;
                switchcount++;
            } else {
                if (switchcount == 0 && dir == "asc") {
                    dir = "desc";
                    switching = true;
                }
            }
        }
    }
</script>